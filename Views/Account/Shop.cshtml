@model IEnumerable<EcommerceProject.Models.Produit>
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Featured Products</title>
    <link href="https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
        <style>
        /* General Styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --primary: #2563eb;
            --primary-dark: #1d4ed8;
            --secondary: #64748b;
            --background: #f8fafc;
            --surface: #ffffff;
            --text: #0f172a;
            --text-light: #64748b;
            --border: #e2e8f0;
            --shadow: 0 10px 30px -5px rgba(0, 0, 0, 0.1);
            --radius: 16px;
            --transition: all 0.3s ease;
        }



        .featured-section {
            margin-top: 3rem;
        }

        .section-header {
            text-align: center;
            margin-bottom: 2rem;
        }

        .section-title {
            font-size: 2.5rem;
            font-weight: 700;
            color: var(--text);
        }

        .section-subtitle {
            color: var(--text-light);
            font-size: 1rem;
        }

        .products-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 1.5rem;
            margin-top: 2rem;
        }

        .product-card {
            background: var(--surface);
            border-radius: var(--radius);
            box-shadow: var(--shadow);
            transition: var(--transition);
            overflow: hidden;
        }

        .product-card:hover {
            transform: translateY(-5px);
        }

        .product-image img {
            width: 100%; /* Garder la largeur adaptative */
            height: 250px; /* Nouvelle hauteur des images */
            object-fit: contain; /* Maintenir le ratio tout en remplissant l'espace */
            border-bottom: 1px solid var(--border);
        }

        .product-details {
            padding: 1rem;
        }

        .product-category {
            font-size: 0.9rem;
            color: var(--primary);
            text-transform: uppercase;
        }

        .product-name {
            font-size: 1.2rem;
            font-weight: bold;
            color: var(--text);
            margin: 0.5rem 0;
        }

        .product-price {
            font-size: 1.1rem;
            font-weight: bold;
            color: var(--primary-dark);
        }

        .product-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 1rem;
        }

        .btn-primary {
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 20px;
            background-color: var(--primary);
            color: #fff;
            font-size: 0.9rem;
            font-weight: bold;
            cursor: pointer;
            transition: var(--transition);
        }

        .btn-primary:hover {
            background-color: var(--primary-dark);
        }

        .btn-primary-1 {
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 20px;
            background-color: rgb(243, 243, 243);
            color: var(--primary);
            font-size: 0.9rem;
            font-weight: bold;
            cursor: pointer;
            transition: var(--transition);
        }

        .btn-primary-1:hover {
            background-color: transparent;
        }

        .btn-add {
            display: flex;
            align-items: center;
            padding: 0.5rem 1rem;
            background-color: var(--primary);
            border: none;
            border-radius: 20px;
            color: white;
            font-weight: bold;
            cursor: pointer;
            transition: var(--transition);
        }

        .btn-add i {
            margin-right: 0.5rem;
        }

        .btn-add:hover {
            background-color: var(--primary-dark);
        }

        .filter-bar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            gap: 1rem;
        }

        .filter-bar input, .filter-bar select {
            flex: 1;
            padding: 0.5rem;
            font-size: 1rem;
            border: 1px solid var(--border);
            border-radius: var(--radius);
            background: var(--surface);
            box-shadow: var(--shadow);
        }

        .filter-bar button {
            background: var(--primary);
            color: white;
            border: none;
            padding: 0.6rem 1.2rem;
            border-radius: var(--radius);
            font-weight: 600;
            cursor: pointer;
            transition: var(--transition);
        }

        .filter-bar button:hover {
            background: var(--primary-dark);
        }
    </style>
</head>
<body>
    <div class="container">
        <section class="featured-section">
            <div class="section-header">
                <h2 class="section-title">Featured Products</h2>
                <p class="section-subtitle">Découvrez notre sélection de produits tendance soigneusement choisis pour vous.</p>
            </div>

<div class="filter-bar">
    <input type="text" id="searchBox" placeholder="Search products...">
    <select id="categoryFilter">
        <option value="">All Categories</option>
        @foreach (var category in Model.Select(p => string.IsNullOrEmpty(p.Categorie) ? "Uncategorized" : p.Categorie).Distinct())
        {
            <option value="@category">@category</option>
        }
    </select>
    <button id="resetFilters">Reset Filters</button>
</div>

            <div class="products-grid">
                @foreach (var produit in Model)
                {
                    <div class="product-card">
                        <div class="product-image">
                            <img src="@produit.ImageUrl" alt="@produit.Nom">
                        </div>
                        <div class="product-details">
                            <div class="product-category">@produit.Categorie</div>
                            <h3 class="product-name">@produit.Nom</h3>
                            <div class="product-price">@produit.Prix €</div>
                            <div class="product-footer">
                                <a href="/account/details/@produit.Id" class="btn-primary-1">View Details</a>
                                <a asp-controller="Produits" asp-action="AjouterAuPanier" asp-route-id="@produit.Id" class="btn-add">
                                    <i class="fas fa-shopping-cart"></i> Ajouter
                                </a>
                            </div>
                        </div>
                    </div>
                }
                }
            </div>
        </section>
    </div>

    
</body>

    
       <script>
    document.addEventListener('DOMContentLoaded', function () {

    // Filter by name (search box)
    document.getElementById('searchBox').addEventListener('input', function () {
        const searchQuery = this.value.toLowerCase();
        filterProducts();
    });

    // Filter by category
    document.getElementById('categoryFilter').addEventListener('change', function () {
        filterProducts();
    });

    // Reset Filters
    document.getElementById('resetFilters').addEventListener('click', function () {
        document.getElementById('searchBox').value = '';
        document.getElementById('categoryFilter').value = '';
        filterProducts();
    });

    // Function to filter products based on search and category
    function filterProducts() {
        const searchQuery = document.getElementById('searchBox').value.toLowerCase();
        const selectedCategory = document.getElementById('categoryFilter').value.toLowerCase();
        
        const productCards = document.querySelectorAll('#productGrid .product-card');
        
        productCards.forEach(card => {
            const productName = card.querySelector('.product-name').innerText.toLowerCase();
            const productCategory = card.dataset.category.toLowerCase();
            
            // Apply both search and category filter
            const matchesSearch = productName.includes(searchQuery);
            const matchesCategory = selectedCategory === '' || productCategory.includes(selectedCategory);
            
            // Display or hide product based on the filters
            if (matchesSearch && matchesCategory) {
                card.style.display = 'block';
            } else {
                card.style.display = 'none';
            }
        });
    }

});

</script>
</html>
